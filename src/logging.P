%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% $Rev: 887 $:     Revision of last commit
% $Author: fodor.paul $:  Author of last commit
% $Date: 2011-08-19 14:52:58 +0300 (Vi, 19 aug 2011) $:    Date of last commit
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% logging
:- dynamic(logging/1).

log(L):-
	persistent_check(L),
	logging(on),
	!,
	see_db,
	(
		(
			write('  Log:   '),
			write(L),
			nl
		);(
			write('  Failed:  '),
			write(L),
			nl,
			fail
		)
	),
	store_event(L),
	store_event_java(L). % defined in the java_interface.P
log(L):-
	store_event(L),
	store_event_java(L).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
db_log(_L):-
	db_trace(on),
	!,
	see_db.
db_log(_L):-
	!.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% storing triggered events
:- dynamic(stored_event/1).
store_event(L):-
	store_fired_events(on),
	!,
	assert(stored_event(L)).
store_event(_L).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% logging events in files
:- dynamic(logging_to_file/1).

write_log(File,Event) :-
	logging_to_file(on),
	open(File,append,Stream),
	write(Stream,Event),
	write(Stream,'.'),
	nl(Stream),
	close(Stream),
	!.
write_log(_File,_Event) :-
	!.

reset_log_file(File) :-
	open(File,write,Stream),
	close(Stream),
	!.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%logging_external_event(event(Event,[T1,T2])):- true.
logging_external_event(event(Event,[T1,T2])):-
	java_notification(off),
	external_trigger_check(Event),
	!,
	(
		( write('*Event: '), write(Event), write(' @ '),
			write([T1,T2]), nl
			%, db_log(_L)
		)
		%TODO write_log should only be used when logging_to_file(on)
		,write_log('external_tr.log',event(Event,[T1,T2]))
		%;(write('  Failed:  '), write(event(Event,[T1,T2])), nl,fail)
	),
	log(event(Event,[T1,T2])),
	spy_point(Event).

% added for java notification
logging_external_event(event(Event,[T1,T2])):-
	java_notification(on),
	external_trigger_check(Event),
	!,
	(
		notify_java_listener(Event, T1, T2)
	),
	log(event(Event,[T1,T2])),
	spy_point(Event).

logging_external_event(event(Event,[T1,T2])):-
	!,
	log(event(Event,[T1,T2])),
	write_log('external_tr.log',event(Event,[T1,T2])),
	spy_point(Event).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% persistent_check/1
% persistent_check(event(Event,[T1,T2]))
persistent_check(event(Event,[T1,T2])):-
	persistent_event(Event),
	!,
	write_persistent_to_file('persistent.txt',event(Event,[T1,T2])).
persistent_check(_).

% write_persistent_to_file/2
% write_persistent_to_file(+File,+Event)
write_persistent_to_file(File,Event) :-
	open(File,append,Stream),
	write(Stream,Event),
	write(Stream,'.'),
	nl(Stream),
	close(Stream),
	!.
write_persistent_to_file(_File,_Event) :-
	!.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
