swipl -g "open('../results.txt',append,FH), ['../../src/etalis.P'], set_etalis_flag(output_temporary_files,on), set_etalis_flag(logging_to_file,on), set_etalis_flag(store_fired_events,on), compile_event_file('test_01.event'), event(start_compEvent), event(stock(1,10,40)), event(stock(1,40,40)), event(stock(1,12,40)), findall(stored_event(event(buy_compEvent(Y),T)), stored_event(event(buy_compEvent(Y),T)),List), ( List = [stored_event(event(buy_compEvent(10),[datime(_,_,_,_,_,_,1),datime(_,_,_,_,_,_,_)])),stored_event(event(buy_compEvent(12),[datime(_,_,_,_,_,_,1),datime(_,_,_,_,_,_,_)]))] -> write(FH,'sequence_04\t\t\tpassed\n'), write('sequence_04\t\t\tpassed\n') ; write(FH,'sequence_04\t\t\tfailed\n'), write('sequence_04\t\t\tfailed\n') ),halt."

swipl -g "open('../results.txt',append,FH), ['../../src/etalis.P'], set_etalis_flag(output_temporary_files,on), set_etalis_flag(db_trace,on), set_etalis_flag(logging_to_file,on), set_etalis_flag(output_temporary_files,on), set_etalis_flag(logging_to_file,on), set_etalis_flag(store_fired_events,on), compile_event_file('test_01.event'), event(start_compEvent), event(stock(1,10,40)), event(stock(1,40,40)), event(stock(1,12,40)), findall(stored_event(event(buy_compEvent(Y),T)), stored_event(event(buy_compEvent(Y),T)),List), ( List = [stored_event(event(buy_compEvent(10),[datime(_,_,_,_,_,_,1),datime(_,_,_,_,_,_,_)])),stored_event(event(buy_compEvent(12),[datime(_,_,_,_,_,_,1),datime(_,_,_,_,_,_,_)]))] -> write(FH,'sequence_04\t\t\tpassed\n'), write('sequence_04\t\t\tpassed\n') ; write(FH,'sequence_04\t\t\tfailed\n'), write('sequence_04\t\t\tfailed\n') ),halt."
